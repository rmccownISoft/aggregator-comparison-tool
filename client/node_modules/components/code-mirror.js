module.exports = function createCodeMirrorComponent() {
	return Ractive.extend({
		template: require('./code-mirror.html'),
		twoway: false,
		isolated: true,
		data() {
			return {
				value: '',
				codeMirrorInstance: false,
				language: '',
				id: '',
				class: '',
			}
		},
		onrender() {
			const ractive = this

			const textarea = ractive.find('textarea')
			if (textarea) {
				const codeMirrorInstance = CodeMirror.fromTextArea(textarea, { mode: ractive.get('language') })
				let customClasses = ractive.get('class')

				if (customClasses) {
					const codeMirrorParentDiv = document.querySelector(`#${ractive.get('id')} ~ .CodeMirror`)
					customClasses = customClasses.split(' ').filter(c => c)

					customClasses.forEach(cssClass => codeMirrorParentDiv.classList.add(cssClass))
				}

				ractive.set({ codeMirrorInstance })

				codeMirrorInstance.on('change', () => {
					ractive.set({ value: codeMirrorInstance.getValue() })
					ractive.fire('input', codeMirrorInstance.getValue())
				})
			}
		},
		ondestruct() {
			const ractive = this

			const codeMirrorInstance = ractive.get('codeMirrorInstance')

			if (codeMirrorInstance) {
				codeMirrorInstance.toTextArea()
			}
		},
		focus() {
			const ractive = this

			const codeMirrorInstance = ractive.get('codeMirrorInstance')

			if (codeMirrorInstance) {
				codeMirrorInstance.focus()
			}
		},
	})
}
